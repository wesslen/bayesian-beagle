
---
title: "A Novel Approach for Automatic Program Repair using Round-Trip Translation with Large Language Models"
id: "2401.07994v1"
description: "TL;DR Large Language Models can use Round-Trip Translation to repair bugs in code."
author: Fernando Vallecillos Ruiz, Anastasiia Grishina, Max Hort, Leon Moonen
date: "2024-01-15"
image: "../../../bayesian-beagle.png"
categories: ['programming', 'robustness']
format:
  html:
    code-overflow: wrap
---

![](None)

### Summary:

The article explores the use of round-trip translation (RTT) with large language models (LLMs) for automated program repair (APR). It discusses the implementation of RTT, the properties of RTT patches, and presents the results and analysis of experiments conducted using RTT for APR. The findings suggest that RTT with LLMs is a viable technique for repairing bugs in code and has the potential to solve unique problems not addressed by other APR approaches. However, it also highlights challenges such as changes in coding style and maintainability impact associated with RTT-generated patches.

### Major Findings:
1. RTT with LLMs repaired 101 of 164 bugs with GPT-4 on the HumanEval-Java dataset, demonstrating its effectiveness in automated program repair.
2. The comparison with previous work using the exact same models highlights the added value of RTT in the APR landscape, with the potential to solve unique problems not addressed by other approaches.
3. The properties of RTT patches, such as changes in coding style and maintainability impact, present challenges and trade-offs associated with using RTT for automated program repair.

### Analysis and Critique:
The article provides valuable insights into the effectiveness and limitations of using RTT with LLMs for automated program repair. While the findings demonstrate the potential of RTT to address unique problems and improve software reliability, the challenges associated with changes in coding style and maintainability impact should be carefully considered. Additionally, the comparison with previous work and the qualitative analysis of generated candidate patches contribute to a deeper understanding of the performance and implications of RTT in the context of APR. However, further research is needed to address potential methodological issues and the impact of RTT on code security.

## Appendix

|          |          |
|----------|----------|
| Model     | gpt-3.5-turbo-1106       |
| Date Generated     | 2024-01-31       |
| Abstract | [https://arxiv.org/abs/2401.07994v1](https://arxiv.org/abs/2401.07994v1)        |
| HTML     | [https://browse.arxiv.org/html/2401.07994v1](https://browse.arxiv.org/html/2401.07994v1)       |
| Truncated       | True       |
| Word Count       | 20306       |