
---
title: "EPiC: Cost-effective Search-based Prompt Engineering of LLMs for Code Generation"
id: "2408.11198v1"
description: "EPiC, an evolutionary prompt engineering method, improves LLM-based code generation cost-effectively."
author: Hamed Taherkhani, Melika Sepindband, Hung Viet Pham, Song Wang, Hadi Hemmati
date: "2024-08-20"
image: "https://browse.arxiv.org/html/2408.11198v1/extracted/5803390/figures/Alg.png"
categories: ['programming']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2408.11198v1/extracted/5803390/figures/Alg.png)

**Summary:**

The paper introduces EPiC, a cost-effective search-based prompt engineering approach for improving code generation using Large Language Models (LLMs). EPiC leverages an evolutionary algorithm to refine prompts, resulting in enhanced code generation performance. The proposed method outperforms state-of-the-art (SOTA) methods in terms of accuracy while maintaining a competitive cost. EPiC achieved a 93.5% pass@1 rate on the HumanEval dataset and a 79% pass@1 rate on the MBPP dataset, outperforming other methods with a lower or comparable cost. The experiments also showed that incorporating randomness in the mutation process and adjusting the population size can impact the performance and cost-effectiveness of the algorithm. Furthermore, EPiC was evaluated using an open-source LLM, MagicCoder, and was found to enhance the performance of smaller models, indicating its potential applicability across various LLMs.

**Major Findings:**

1. EPiC outperforms SOTA methods in terms of accuracy, achieving a 93.5% pass@1 rate on the HumanEval dataset and a 79% pass@1 rate on the MBPP dataset.
2. EPiC maintains a competitive cost, making it a cost-effective solution for software engineering applications.
3. Incorporating randomness in the mutation process and adjusting the population size can impact the performance and cost-effectiveness of the algorithm.
4. EPiC can enhance the performance of smaller models, indicating its potential applicability across various LLMs.

**Analysis and Critique:**

The paper presents a novel approach to prompt engineering for code generation using LLMs. The proposed method, EPiC, demonstrates promising results in terms of accuracy and cost-effectiveness. However, there are some potential limitations and areas for improvement.

1. The paper focuses on code generation, and it is not clear how EPiC would perform in other software engineering applications. The authors mention that EPiC is task-agnostic, but this claim needs to be validated with further experiments.
2. The paper uses two datasets, HumanEval and MBPP, for evaluation. While these datasets are commonly used in the literature, they may not fully represent the diversity of real-world

## Appendix

|          |          |
|----------|----------|
| Model     | accounts/fireworks/models/mixtral-8x22b-instruct       |
| Date Generated     | 2024-08-27       |
| Abstract | [https://arxiv.org/abs/2408.11198v1](https://arxiv.org/abs/2408.11198v1)        |
| HTML     | [https://browse.arxiv.org/html/2408.11198v1](https://browse.arxiv.org/html/2408.11198v1)       |
| Truncated       | False       |
| Word Count       | 12719       |