
---
title: "HITS: High-coverage LLM-based Unit Test Generation via Method Slicing"
id: "2408.11324v1"
description: "LLMs struggle with complex Java methods; our approach of slicing methods for LLM-based test generation improves line and branch coverage."
author: Zejun Wang, Kaibo Liu, Ge Li, Zhi Jin
date: "2024-08-21"
image: "https://browse.arxiv.org/html/2408.11324v1/x1.png"
categories: ['programming']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2408.11324v1/x1.png)

### Summary:

The paper presents a novel approach to improve the performance of large language models (LLMs) in generating unit tests for complex Java methods. The proposed method, HITS, decomposes the complex methods into slices and generates tests for each slice separately. This simplifies the analysis scope for the LLM, making it easier to cover more lines and branches in each slice. The method is evaluated on a dataset of complex methods collected from projects used by existing state-of-the-art approaches. The results show that HITS significantly outperforms current test case generation methods with LLMs and the typical SBST method Evosuite in terms of both line and branch coverage scores.

### Major Findings:

1. Decomposing complex methods into slices and generating tests for each slice separately improves the performance of LLMs in generating unit tests.
2. HITS significantly outperforms current test case generation methods with LLMs and the typical SBST method Evosuite in terms of both line and branch coverage scores.
3. The proposed method simplifies the analysis scope for the LLM, making it easier to cover more lines and branches in each slice.

### Analysis and Critique:

The paper presents an innovative approach to improve the performance of LLMs in generating unit tests for complex Java methods. The proposed method, HITS, is well-structured and effectively communicates the essential information from the academic article. The method is evaluated on a dataset of complex methods collected from projects used by existing state-of-the-art approaches, and the results are promising. However, the paper does not discuss any potential limitations, unanswered questions, or potential biases that were apparent while reviewing the text. Additionally, the paper does not provide any information on the methodology used to collect the dataset or the criteria used to select the projects. This information is important to understand the generalizability of the proposed method. Furthermore, the paper does not discuss any potential methodological issues, conflicting evidence, or areas that require further research or clarification. Overall, the paper provides a valuable contribution to the field of automatic unit test generation methods, but further research is needed to address the limitations and unanswered questions.

## Appendix

|          |          |
|----------|----------|
| Model     | accounts/fireworks/models/mixtral-8x22b-instruct       |
| Date Generated     | 2024-08-27       |
| Abstract | [https://arxiv.org/abs/2408.11324v1](https://arxiv.org/abs/2408.11324v1)        |
| HTML     | [https://browse.arxiv.org/html/2408.11324v1](https://browse.arxiv.org/html/2408.11324v1)       |
| Truncated       | False       |
| Word Count       | 8205       |