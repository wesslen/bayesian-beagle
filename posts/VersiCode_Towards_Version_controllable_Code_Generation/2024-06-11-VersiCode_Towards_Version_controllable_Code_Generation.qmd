
---
title: "VersiCode: Towards Version-controllable Code Generation"
id: "2406.07411v1"
description: "TL;DR: VersiCode dataset tests LLMs' ability to generate version-correct code, revealing challenges and limitations."
author: Tongtong Wu, Weigang Wu, Xingyu Wang, Kang Xu, Suyu Ma, Bo Jiang, Ping Yang, Zhenchang Xing, Yuan-Fang Li, Gholamreza Haffari
date: "2024-06-11"
image: "https://browse.arxiv.org/html/2406.07411v1/x1.png"
categories: ['architectures', 'production', 'programming']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2406.07411v1/x1.png)

### Summary:

The paper introduces VersiCode, a comprehensive dataset designed to assess the ability of large language models (LLMs) to generate verifiable code for specific library versions. The dataset encompasses 300 libraries across more than 2,000 versions spanning 9 years. Two dedicated evaluation tasks are proposed: version-specific code completion (VSCC) and version-aware code editing (VACE). Comprehensive experiments are conducted to benchmark the performance of LLMs, revealing the challenging nature of these tasks and the struggle of even state-of-the-art LLMs to generate version-correct code.

### Major Findings:

1. VersiCode is the first version-controllable code generation dataset, addressing the limitations of existing datasets that do not account for the concept of version, which is crucial in professional software development.
2. The proposed tasks, VSCC and VACE, simulate realistic settings in professional software development and shed light on LLMs' capabilities and limitations in handling version-specific code generation.
3. Comprehensive experiments conducted on VersiCode demonstrate that it is a high-quality and challenging dataset, revealing that most LLMs struggle with version-specific code generation, especially with the latest libraries.

### Analysis and Critique:

1. The paper provides a well-structured and coherent summary of the proposed dataset and tasks, effectively communicating the essential information.
2. The paper highlights the importance of considering the concept of version in code-related tasks and the limitations of existing datasets in this regard.
3. The proposed tasks, VSCC and VACE, are well-defined and address the need for realistic evaluation of LLMs in professional software development.
4. The comprehensive experiments conducted on VersiCode provide valuable insights into the performance of LLMs in version-specific code generation.
5. The paper could benefit from a more detailed discussion of the potential methodological issues, conflicting evidence, or areas that require further research or clarification.
6. The paper could also provide more information on the potential biases or limitations of the proposed dataset and tasks.
7. The paper could include a more detailed analysis of the performance of different LLMs on the proposed tasks, highlighting their strengths and weaknesses.
8. The paper could also discuss the potential applications and implications of the

## Appendix

|          |          |
|----------|----------|
| Model     | accounts/fireworks/models/mixtral-8x22b-instruct       |
| Date Generated     | 2024-06-23       |
| Abstract | [https://arxiv.org/abs/2406.07411v1](https://arxiv.org/abs/2406.07411v1)        |
| HTML     | [https://browse.arxiv.org/html/2406.07411v1](https://browse.arxiv.org/html/2406.07411v1)       |
| Truncated       | False       |
| Word Count       | 6957       |