
---
title: "Experimenting a New Programming Practice with LLMs"
description: "A prototype called AISD uses large language models to automate software development, allowing engineers to focus on high-level tasks."
author: Simiao Zhang, Jiaping Wang, Guoliang Dong, Jun Sun, Yueling Zhang, Geguang Pu
date: "2024-01-02"
image: "https://browse.arxiv.org/html/2401.01062v1/x1.png"
filename: "gpt-3.5-turbo-1106"
categories: ['programming', 'education']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2401.01062v1/x1.png)

# Experimenting a New Programming Practice with LLMs

## Major Takeaways
1. **Potential for Revolutionizing Software Development**: The paper explores the potential of large language models (LLMs) in automating software development, aiming to free engineers from low-level coding and focusing on requirement engineering and system testing.

2. **Development of AISD**: The authors introduce AISD, an AI-aided software development framework designed to engage users throughout the software development process and keep the human developers informed and involved.

3. **Evaluation of AISD**: The experimental results suggest that AISD significantly improves the task pass rate while consuming fewer tokens, emphasizing the critical role of human engagement in AI-aided software development.

## Introduction
Large language models (LLMs) have shown promising performance in natural language understanding and complex problem-solving, leading to applications in code generation. Prior attempts have aimed to replace programmers with LLMs but often failed with non-trivial software projects due to inadequate user feedback and oversight of requirement engineering and system testing.

## Preliminaries
The extensive section reviews LLMs and prompt engineering, emphasizing their capabilities in natural language processing and code synthesis. It also introduces the concept of LLM-based autonomous agents as a core controller for planning and decision-making.

## Our Approach
The paper introduces the AI-aided software development framework AISD, designed to involve users in the development process and to simplify system design to align with LLM capabilities. It lays out the workflow of AISD, involving user feedback in use case generation and manual testing.

## Experiments
The authors evaluate AISD using an internally developed benchmark, CAASD, comparing it to two existing approaches, ChatDev and MetaGPT. The experiment demonstrates that AISD achieved an impressive pass rate of 75.2% with the lowest token consumption, highlighting the critical role of human engagement.

## Related Work
The paper contextualizes its work within existing approaches to automatic code generation, emphasizing the limitations of traditional techniques and the potential of LLMs in software development.

## Critique
While the paper presents compelling findings about the potential of AI-aided software development and the effectiveness of AISD, it has limitations:
- **Benchmark Validity**: The benchmark created by the authors may have bias and limitations that need to be addressed. 
- **Limited Comparison**: The comparison with existing approaches may not fully capture the complexity and diversity of real-world software projects. 
- **Human Interaction**: The paper highlights the importance of human interaction but does not delve into the potential challenges and biases introduced by human involvement.

In conclusion, the paper presents a compelling approach to AI-aided software development, emphasizing the critical role of human engagement in improving development outcomes. However, further research and refinement are necessary to validate the effectiveness and robustness of the proposed framework.

## Appendix

|          |          |
|----------|----------|
| Model     | gpt-3.5-turbo-1106       |
| Date Generated     | 2024-01-04       |
| Abstract | [http://arxiv.org/abs/2401.01062v1](http://arxiv.org/abs/2401.01062v1)        |
| HTML     | [https://browse.arxiv.org/html/2401.01062v1](https://browse.arxiv.org/html/2401.01062v1)       |
| Truncated       | False       |
| Word Count       | 12628       |