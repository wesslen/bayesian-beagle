
---
title: "CodexGraph: Bridging Large Language Models and Code Repositories via Code Graph Databases"
id: "2408.03910v1"
description: "TL;DR: \frameworkImproves LLM-codebase interaction using graph databases, showing versatility in software engineering."
author: Xiangyan Liu, Bo Lan, Zhiyuan Hu, Yang Liu, Zhicheng Zhang, Wenmeng Zhou, Fei Wang, Michael Shieh
date: "2024-08-07"
image: "https://browse.arxiv.org/html/2408.03910v1/x1.png"
categories: ['programming']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2408.03910v1/x1.png)

### Summary:

- The paper introduces \framework, a system that integrates LLM agents with graph database interfaces extracted from code repositories.
- \framework aims to mitigate the limitations of existing approaches by bridging code repositories with LLMs through graph databases.
- The system utilizes static analysis to extract code graphs from repositories using a task-agnostic schema that defines the nodes and edges within the code graphs.
- The structural properties of graph databases enhance the LLM agent's comprehension of code structures.
- \framework is evaluated using three benchmarks: CrossCodeEval, SWE-bench, and EvoCodeBench, and demonstrates competitive performance and potential in both academic and real-world environments.

### Major Findings:

1. \framework integrates code repositories with LLMs via graph databases for enhanced code navigation and understanding.
2. The system achieves competitive performance on three challenging and representative repository-level code benchmarks.
3. \framework showcases versatility in five real-world software engineering scenarios, proving its value beyond academic settings.

### Analysis and Critique:

- The paper presents a novel approach to integrating LLMs with code repositories, leveraging the structural properties of graph databases.
- The use of a task-agnostic schema for code graph extraction allows for a more flexible and generalizable approach to code understanding.
- The evaluation of \framework on three benchmarks and five real-world applications demonstrates its potential for practical use in software engineering.
- However, the paper does not discuss potential limitations or challenges in implementing \framework, such as the scalability of the graph database or the computational resources required for static analysis.
- Additionally, the paper does not provide a detailed comparison with other existing approaches, making it difficult to assess the relative strengths and weaknesses of \framework.
- Future work could address these limitations by conducting a more comprehensive evaluation of \framework, including comparisons with other methods and an analysis of its scalability and resource requirements.

## Appendix

|          |          |
|----------|----------|
| Model     | accounts/fireworks/models/mixtral-8x22b-instruct       |
| Date Generated     | 2024-08-13       |
| Abstract | [https://arxiv.org/abs/2408.03910v1](https://arxiv.org/abs/2408.03910v1)        |
| HTML     | [https://browse.arxiv.org/html/2408.03910v1](https://browse.arxiv.org/html/2408.03910v1)       |
| Truncated       | False       |
| Word Count       | 7961       |