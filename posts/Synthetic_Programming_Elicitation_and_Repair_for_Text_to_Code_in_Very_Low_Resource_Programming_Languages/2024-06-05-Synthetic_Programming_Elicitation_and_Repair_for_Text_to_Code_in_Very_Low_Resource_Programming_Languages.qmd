
---
title: "Synthetic Programming Elicitation and Repair for Text-to-Code in Very Low-Resource Programming Languages"
id: "2406.03636v1"
description: "LLMs struggle with unseen programming languages. SPEAC, a new approach, enables LLMs to generate valid code for these languages."
author: Federico Mora, Justin Wong, Haley Lepe, Sahil Bhatia, Karim Elmaaroufi, George Varghese, Joseph E. Gonzalez, Elizabeth Polgreen, Sanjit A. Seshia
date: "2024-06-05"
image: "https://browse.arxiv.org/html/2406.03636v1/extracted/5647054/speak.png"
categories: ['programming']
format:
  html:
    code-overflow: wrap
---

![](https://browse.arxiv.org/html/2406.03636v1/extracted/5647054/speak.png)

### Summary:

The paper presents a novel method called Synthetic Programming Elicitation and Compilation (SPEAC) for generating syntactically correct code from Large Language Models (LLMs) in very low resource programming languages (VLPLs). The approach is fundamentally different from existing prompting, decoding, and fine-tuning strategies. It is inspired by natural programming elicitation, a technique used to help programming language designers understand how programmers naturally approach problems.

The key idea behind SPEAC is to design an intermediate language that LLMs naturally know how to use and can be automatically compiled to the target VLPL. The paper introduces a case study using Python as the parent language, UCLID5 as the target language, and a subset of Python as the child language. UCLID5 is a language used for formal modeling and verification of state transition systems, which has limited code examples and is not frequently found in other programming languages.

The paper demonstrates that SPEAC produces syntactically correct programs more frequently than existing retrieval and fine-tuning baselines without sacrificing semantic correctness. The approach uses deductive techniques to automatically repair programs generated by LLMs that are in the child language but not in the target VLPL. When these deductive techniques are unable to fully repair a program, a hole is inserted, and an LLM is asked to finish the repair, repeating as necessary.

### Major Findings:

1. SPEAC is a novel method for generating syntactically correct code from LLMs in very low resource programming languages.
2. The approach is demonstrated to be effective in a case study using Python as the parent language, UCLID5 as the target language, and a subset of Python as the child language.
3. SPEAC produces syntactically correct programs more frequently than existing retrieval and fine-tuning baselines without sacrificing semantic correctness.

### Analysis and Critique:

The paper presents an innovative approach to generating syntactically correct code from LLMs in very low resource programming languages. The use of an intermediate language that LLMs naturally know how to use and can be automatically compiled to the target VLPL is a promising solution to the challenges of generating code in low-resource languages.

However, the paper does not provide a comprehensive evaluation of the approach. The case

## Appendix

|          |          |
|----------|----------|
| Model     | accounts/fireworks/models/mixtral-8x22b-instruct       |
| Date Generated     | 2024-06-23       |
| Abstract | [https://arxiv.org/abs/2406.03636v1](https://arxiv.org/abs/2406.03636v1)        |
| HTML     | [https://browse.arxiv.org/html/2406.03636v1](https://browse.arxiv.org/html/2406.03636v1)       |
| Truncated       | False       |
| Word Count       | 9438       |